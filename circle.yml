general:
  artifacts:
    - /home/ubuntu/steamspy/app/build/outputs.apk

machine:
    java:
        version: oraclejdk8
    environment:
        ANDROID_HOME: /usr/local/android-sdk-linux
        ANDROID_BUILD_TOOLS: 26.0.1
        APPLICATION_ID: md.ins8.steamspy
        FABRIC_API_KEY: 0000000000000000000000000000000000000000
        GOOGLE_MAPS_API_KEY: DUMMY_GOOGLE_MAPS_API_KEY
        NEARIT_API_KEY: DUMMY_NEARIT_API_KEY
        TWITTER_API_KEY: DUMMY_TWITTER_API_KEY
        TWITTER_SECRET: DUMMY_TWITTER_SECRET

dependencies:
    pre:
        - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
        - if [ ! -e $ANDROID_HOME/tools/bin/sdkmanager ]; then echo y | android update sdk --no-ui --all --filter tools; fi
        - mkdir "$ANDROID_HOME/licenses" || true
        - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
        - $ANDROID_HOME/tools/bin/sdkmanager --verbose "platform-tools" "build-tools;"$ANDROID_BUILD_TOOLS "extras;google;m2repository"

    override:
        - chmod +x gradlew
        - if [ -f ./gradlew ]; then ./gradlew app:dependencies --console=plain --no-daemon;else gradle app:dependencies --console=plain --no-daemon;fi
        - curl -L -o ./app/release.jks $KEYSTORE_PATH

    cache_directories:
        - /usr/local/android-sdk-linux/tools
        - /usr/local/android-sdk-linux/platform-tools
        - /usr/local/android-sdk-linux/build-tools
        - /usr/local/android-sdk-linux/licenses
        - /usr/local/android-sdk-linux/extras/google/m2repository

        - /home/ubuntu/.gradle/caches/
        - /home/ubuntu/.gradle/wrapper/


test:
    override:
        - ./gradlew check --no-daemon --console=plain --continue
        - (./gradlew assemble)
        - cp -r app/build/outputs $CIRCLE_ARTIFACTS

    post:
        - mkdir -p $CIRCLE_TEST_REPORTS/reports/junit
        - find app/build/test-results/ -name "*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/reports/junit/ \;

        - mkdir -p $CIRCLE_TEST_REPORTS/reports/lint
        - find app/build/reports -name "lint*.html" -exec cp {} $CIRCLE_TEST_REPORTS/reports/lint/ \;
        - find app/build/reports -name "lint*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/reports/lint/ \;

        - mkdir -p $CIRCLE_TEST_REPORTS/reports/detekt
        - find app/build/reports/ -name "report.detekt" -exec cp {} $CIRCLE_TEST_REPORTS/reports/detekt/ \;